var requestPromise = require('request-promise-native'),
    _jar           = requestPromise.jar(),
    request        = requestPromise.defaults({ jar: _jar }),
    _url           = 'https://rarbg.to/torrents.php',
    _checkedAsBot,
    _requestIsActive;

function _bypassAntiBotChecks () {
    var cookies     = _jar.getCookies(_url),
        cookieExpla = getCookie('expla');

    cookieExpla = cookieExpla && parseInt(cookieExpla.value) || 0;

    function getCookie (key) {
        return cookies.find(cookie => cookie.key === key);
    }

    function setCookie (key, value, seconds) {
        var date;
        value = (typeof key !== 'undefined' ? key + '=' : '') + value;
        if (seconds) {
            date = new Date();
            date.setTime(date.getTime() + seconds * 1000);
            value += '; expires=' + date.toGMTString();
        }
        _jar.setCookie(request.cookie(value), _url);
    }

    setCookie('vDVPaqSe', 'r9jSB2Wk', 5 * 24 * 60 * 60);

    if (cookieExpla < 4) {
        setCookie('expla', cookieExpla + 1, 45);
        if (!getCookie('expla3')) {
            setCookie(undefined, 'tcc');
            setCookie('expla3', 1, 3);
        }
    }
}

function _getCategoryParameters (category) {
    var categories = {
        tv:       [18, 41],
        movies:   [14, 17, 42, 44, 45, 46, 47, 48],
        xxx:      [4],
        games:    [27, 28, 29, 30, 31, 32, 40],
        music:    [23, 24, 25, 26],
        software: [33, 34, 43],
        nonxxx:   [14, 15, 16, 17, 21, 22, 42, 18, 19, 41, 27, 28, 29, 30, 31, 32, 40, 23, 24, 25, 26, 33, 34, 43, 44, 45, 46, 47, 48],
        ebooks:   [35]
    };

    return [].concat(category).reduce((parameters, category) => {
            categories[category] && (parameters = parameters.concat(categories[category]));
            return parameters;
        }, []) || [];
}

module.exports = function search (searchString, options) {
    var replay = () => new Promise(resolve => setTimeout(() => search(searchString, options).then(resolve), 200));

    if (_requestIsActive) {
        return replay();
    }

    _requestIsActive = true;

    options || (options = {});

    var qs                 = {
            search: searchString,
            order:  options.order || 'data',
            by:     options.by || 'DESC',
            page:   options.page || 1
        },
        categoryParameters = _getCategoryParameters(options.category);

    categoryParameters.length && (qs.category = categoryParameters);

    return request({
        uri:     _url,
        qs:      qs,
        headers: {
            'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0'
        }
    }).then(body => {
        var searchResults = [],
            regexp,
            rows,
            id,
            poster,
            title,
            added,
            size,
            seeds,
            leeches,
            filename,
            url;

        _requestIsActive = false;

        _bypassAntiBotChecks();

        if (~body.indexOf('Our system thinks you are a bot')) {
            return _checkedAsBot
                ? (console.log(`[Search] Rarbg.to error: bot rejected while searching for '${searchString}'`), searchResults)
                : ((_checkedAsBot = true), replay());
        }

        //console.log(body);
        regexp = /over\/(.+?)\\'.+?href="\/torrent\/([a-z0-9]+)" title="(.+?)".+?<\/td>.+?>(.+?)<\/td>.+?>(.+?)<\/td>.+?font color="#[a-fA-F0-9]{6}">(\d+)<\/font.+?>(\d+)</g;
        while ((rows = regexp.exec(body)) !== null) {
            poster   = 'https://dyncdn.me/posters2/' + rows[1].substr(0, 1) + '/' + rows[1];
            id       = rows[2];
            title    = rows[3];
            added    = rows[4];
            size     = rows[5];
            seeds    = parseInt(rows[6]);
            leeches  = parseInt(rows[7]);
            filename = title + '.torrent';
            url      = 'https://rarbg.to/download.php?id=' + id + '&f=' + encodeURIComponent(filename);

            searchResults.push({
                id,
                title,
                poster,
                added,
                size,
                seeds,
                leeches,
                filename,
                url
            });
        }

        return searchResults;
    });
};
