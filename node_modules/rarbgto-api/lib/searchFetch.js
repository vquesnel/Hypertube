var _domain = 'https://rarbg.to',
    _url    = `${_domain}/torrents.php`,
    _checkedAsBot,
    _requestIsActive;

function _bypassAntiBotChecks (cookies) {
    function getCookie (key) {
        return new Promise(resolve => cookies.get(
            { url: _domain },
            (error, cookies) => resolve(cookies.find(cookie => cookie.name === key))
        ));
    }

    function setCookie (key, value, seconds) {
        return new Promise(resolve => {
            var cookie = { url: _domain, name: key, value: value },
                date;
            if (seconds) {
                date = new Date();
                date.setTime(date.getTime() + seconds * 1000);
                cookie.expirationDate = date.getTime();
            }
            cookies.set(cookie, () => resolve)
        })
    }

    return getCookie('expla').then(cookie => {
        var cookieExpla = cookie && parseInt(cookie.value) || 0;
        return setCookie('vDVPaqSe', 'r9jSB2Wk', 5 * 24 * 60 * 60).then(() => {
            if (cookieExpla < 4) {
                return setCookie('expla', cookieExpla + 1, 45).then(() => {
                    if (!getCookie('expla3')) {
                        return setCookie(undefined, 'tcc').then(() => setCookie('expla3', 1, 3));
                    }
                })
            }
        });
    });
}

function _getCategoryParameters (category) {
    var categories = {
        tv:       [18, 41],
        movies:   [14, 17, 42, 44, 45, 46, 47, 48],
        xxx:      [4],
        games:    [27, 28, 29, 30, 31, 32, 40],
        music:    [23, 24, 25, 26],
        software: [33, 34, 43],
        nonxxx:   [14, 15, 16, 17, 21, 22, 42, 18, 19, 41, 27, 28, 29, 30, 31, 32, 40, 23, 24, 25, 26, 33, 34, 43, 44, 45, 46, 47, 48],
        ebooks:   [35]
    };

    return [].concat(category).reduce((parameters, category) => {
            categories[category] && (parameters = parameters.concat(categories[category]));
            return parameters;
        }, []) || [];
}

module.exports = function searchFetch (cookies, searchString, options) {
    var replay = () => new Promise(resolve => setTimeout(() => searchFetch(cookies, searchString, options).then(resolve), 200));

    if (_requestIsActive) {
        return replay();
    }

    _requestIsActive = true;

    options || (options = {});

    var qs                 = {
            search: searchString,
            order:  options.order || 'data',
            by:     options.by || 'DESC',
            page:   options.page || 1
        },
        queryString        = '',
        categoryParameters = _getCategoryParameters(options.category);

    for (var param in qs) {
        queryString += `${queryString ? '&' : '?'}${param}=${encodeURIComponent(qs[param])}`;
    }

    queryString = categoryParameters.reduce((queryString, category) => `${queryString}&category[]=${category}`, queryString);

    return fetch(`${_url}${queryString}`, { credentials: 'include' }).then(response => response.text().then(body => {
        var searchResults = [],
            regexp,
            rows,
            id,
            poster,
            title,
            added,
            size,
            seeds,
            leeches,
            filename,
            url;

        _requestIsActive = false;

        _bypassAntiBotChecks(cookies);

        if (~body.indexOf('Our system thinks you are a bot')) {
            return _checkedAsBot
                ? (console.log(`[Search] Rarbg.to error: bot rejected while searching for '${searchString}'`), searchResults)
                : ((_checkedAsBot = true), replay());
        }

        regexp = /over\/(.+?)\\'.+?href="\/torrent\/([a-z0-9]+)" title="(.+?)".+?<\/td>.+?>(.+?)<\/td>.+?>(.+?)<\/td>.+?font color="#[a-fA-F0-9]{6}">(\d+)<\/font.+?>(\d+)</g;
        while ((rows = regexp.exec(body)) !== null) {
            poster   = `https://dyncdn.me/posters2/${rows[1].substr(0, 1)}/${rows[1]}`;
            id       = rows[2];
            title    = rows[3];
            added    = rows[4];
            size     = rows[5];
            seeds    = parseInt(rows[6]);
            leeches  = parseInt(rows[7]);
            filename = `{title}.torrent`;
            url      = `https://rarbg.to/download.php?id=${id}&f=${encodeURIComponent(filename)}`;

            searchResults.push({
                id,
                title,
                poster,
                added,
                size,
                seeds,
                leeches,
                filename,
                url
            });
        }

        return searchResults;
    }));
};
