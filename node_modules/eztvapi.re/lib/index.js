'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var EZTV = (function () {
  function EZTV() {
    var url = arguments.length <= 0 || arguments[0] === undefined ? 'http://eztvapi.re/' : arguments[0];

    _classCallCheck(this, EZTV);

    this.apiUrl = url;

    this.buildQuery = function (options) {
      var queryString = '';
      for (var index in options) {
        queryString += index + '=' + options[index] + '&';
      }

      return queryString;
    };
  }

  _createClass(EZTV, [{
    key: 'getPages',
    value: function getPages() {
      var url = 'shows/';
      return (0, _requestPromise2['default'])({ url: this.apiUrl + url, json: true });
    }
  }, {
    key: 'getShows',
    value: function getShows(page) {
      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var query = this.buildQuery(options);
      var url = 'shows/' + page + '?' + query;
      return (0, _requestPromise2['default'])({ url: this.apiUrl + url, json: true });
    }
  }, {
    key: 'getDetails',
    value: function getDetails(id) {
      var url = 'show/' + id;
      return (0, _requestPromise2['default'])({ url: this.apiUrl + url, json: true });
    }
  }, {
    key: 'search',
    value: function search(keywords) {
      var page = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];
      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

      var query = this.buildQuery(options);
      var url = 'shows/' + page + '?keywords=' + keywords + '&' + query;
      return (0, _requestPromise2['default'])({ url: this.apiUrl + url, json: true });
    }
  }]);

  return EZTV;
})();

exports['default'] = EZTV;
module.exports = exports['default'];